# Définition de la version de l'API Kubernetes pour les objets Deployment (ici v1 pour les déploiements)
apiVersion: apps/v1

# Type de l'objet Kubernetes, ici un déploiement (Deployment)
kind: Deployment

# Métadonnées liées au déploiement
metadata:
  # Nom du déploiement. C'est ainsi que le déploiement sera identifié dans Kubernetes
  name: event-bus-depl

# Spécifications du déploiement
spec:
  # Le nombre de réplicas (copies) de pods à maintenir en fonctionnement
  replicas: 1  # Ici, on indique que l'on veut 1 seul pod en fonctionnement

  # Sélecteur qui permet à Kubernetes de savoir quels pods doivent être gérés par ce déploiement
  selector:
    # Critères de sélection des pods associés à ce déploiement. Ici, on les sélectionne par le label "app: event-bus"
    matchLabels:
      app: event-bus  # Ce label permet de faire correspondre le pod à ce déploiement

  # Le template de pod utilisé pour déployer les pods. C'est la structure que Kubernetes utilise pour créer les pods
  template:
    metadata:
      # Les labels associés au pod, qui permettent de l'identifier et de le lier au déploiement
      labels:
        app: event-bus  # Le label "app: event-bus" pour que ce pod corresponde à la règle de sélection définie plus haut
    spec:
      # Spécifications des containers à exécuter dans le pod
      containers:
        # Définition du premier (et ici le seul) container dans ce pod
        - name: event-bus  # Le nom du conteneur, utilisé pour identifier le conteneur dans le pod
          image: elbraco/event-bus  # L'image Docker du conteneur, ici "braco/event-bus"

---

apiVersion: v1
kind: Service
metadata:
  name: event-bus-srv
spec:
  selector:
    app: event-bus
  ports:
    - name: event-bus
      protocol: TCP
      port: 4005
      targetPort: 4005 
